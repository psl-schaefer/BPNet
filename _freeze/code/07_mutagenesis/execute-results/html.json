{
  "hash": "ea03d3514a50f597f2cea4b41c727801",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Mutagenesis\"\njupyter: py-env-bpnet\nexecute:\n  freeze: auto\n---\n\n\n# Description\n\n- Here we perform in-silico mutagenesis experiments\n\n# Libraries\n\n::: {#9dd6f88e .cell execution_count=1}\n``` {.python .cell-code}\nfrom pathlib import Path\n\nimport matplotlib.pyplot as plt\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch.optim as optim\nfrom torch.utils.data import Dataset, DataLoader\nfrom captum.attr import DeepLift\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport modisco.visualization\nfrom modisco.visualization import viz_sequence\n\nfrom src.config import conf_dict\nfrom src.architectures import *\nfrom src.utils import * \nfrom src.loss import *\nfrom src.metrics import *\nfrom src.DeepLiftUtils import *\n\n# dark mode doesn't quite work for the attribution plots\n#plt.style.use('dark_background')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n```\n:::\n:::\n\n\n# Data\n\n::: {#f6e4bc9f .cell execution_count=2}\n``` {.python .cell-code}\n#conf_dict[\"tf_list\"] = [\"Nanog\"]\n#conf_dict[\"batch_size\"] = 248\n#conf_dict[\"max_epochs\"] = 25\n#conf_dict[\"early_stop_patience\"] = 4\n#conf_dict[\"restore_best_weights\"] = True\n\nPRC_DIR = Path(\"..\") / \"prc\"\nMODELS_DIR = Path(\"..\") / \"trained_models\"\nOUTPUT_DIR = Path(\"..\") / \"prc\" / \"mutagenesis\"\nOUTPUT_DIR.mkdir(exist_ok=True, parents=True)\nFIG_DIR = Path(\"..\") / \"figures\" / \"mutagenesis\"\nFIG_DIR.mkdir(exist_ok=True, parents=True)\n```\n:::\n\n\n::: {#7bf7df48 .cell execution_count=3}\n``` {.python .cell-code}\nif torch.cuda.is_available():\n  device = \"cuda\"\nelif torch.backends.mps.is_available():\n  device = torch.device(\"mps\")\nelse:\n  decive = \"cpu\"\nprint(f\"Using {device} device\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUsing mps device\n```\n:::\n:::\n\n\n::: {#244d896f .cell execution_count=4}\n``` {.python .cell-code}\ntrain_dataset = ChIP_Nexus_Dataset(set_name=\"train\", \n                                   input_dir=PRC_DIR, \n                                   TF_list=conf_dict[\"tf_list\"])\ntrain_dataset\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nChIP_Nexus_Dataset\nSet: train\nTFs: ['Nanog', 'Klf4', 'Oct4', 'Sox2']\nSize: 93904\n```\n:::\n:::\n\n\n::: {#aaaf7647 .cell execution_count=5}\n``` {.python .cell-code}\ntune_dataset = ChIP_Nexus_Dataset(set_name=\"tune\", \n                                  input_dir=PRC_DIR, \n                                  TF_list=conf_dict[\"tf_list\"])\ntune_dataset\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nChIP_Nexus_Dataset\nSet: tune\nTFs: ['Nanog', 'Klf4', 'Oct4', 'Sox2']\nSize: 29277\n```\n:::\n:::\n\n\n::: {#c103508f .cell execution_count=6}\n``` {.python .cell-code}\ntest_dataset = ChIP_Nexus_Dataset(set_name=\"test\", \n                                  input_dir=PRC_DIR, \n                                  TF_list=conf_dict[\"tf_list\"])\ntest_dataset\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\nChIP_Nexus_Dataset\nSet: test\nTFs: ['Nanog', 'Klf4', 'Oct4', 'Sox2']\nSize: 27727\n```\n:::\n:::\n\n\n::: {#5fc04c76 .cell execution_count=7}\n``` {.python .cell-code}\nmodel = torch.load(MODELS_DIR / \"all_tfs_model.pt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/var/folders/n8/xnf8qmpj41795tf723xy8mqm0000gn/T/ipykernel_97745/1827116589.py:1: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n  model = torch.load(MODELS_DIR / \"all_tfs_model.pt\")\n```\n:::\n:::\n\n\n::: {#8e8d5f40 .cell execution_count=8}\n``` {.python .cell-code}\ndl = DeepLift(model)\n```\n:::\n\n\n::: {#9b4efb97 .cell execution_count=9}\n``` {.python .cell-code}\nseqname = \"chr15\"\nstart = 80618982\nend = 80619381\nlength = end - start\n```\n:::\n\n\n::: {#cb4dd339 .cell execution_count=10}\n``` {.python .cell-code}\ncenter = start + 200\n\na = start + 193\nb = end - 192\nprint(a, b, b-a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n80619175 80619189 14\n```\n:::\n:::\n\n\n::: {#5887799b .cell execution_count=11}\n``` {.python .cell-code}\ndef remove_motif(seqname, start, end, dataset, dl, tf_list, device, output_dir, suffix, plot=True, extend_left=23, extend_right=23, figsize1=(20,2), figsize2=(10,2)):\n  # select sequence of interest\n  tmp_df, idx, dist_start, one_hot, baseline, bias_raw, bias_smooth, tf_counts = get_seq_oi(seqname, start, end, dataset, device)\n  width = end - start\n  center = start + 200\n\n  #shuffle region of interest\n  mut_one_hot = one_hot.clone().cpu().numpy()\n  roi = mutate_sequence(mut_one_hot[:,:, dist_start:dist_start+width])\n  # insert shuffled region back in \n  mut_one_hot[:, :, dist_start:dist_start+end-start] = roi\n  mut_one_hot = torch.tensor(mut_one_hot).to(device)\n  assert torch.all(one_hot == mut_one_hot) == False\n\n  contr_list = []\n  df_list = []\n  for tf_index, tf in enumerate(conf_dict[\"tf_list\"]):\n    # compute contribution scores on original and mutated strand\n    contr = dl.attribute(inputs=one_hot, baselines=baseline, target=tf_index, \n            additional_forward_args=(bias_raw, bias_smooth, True)).detach().cpu().numpy()\n    mut_contr = dl.attribute(inputs=mut_one_hot, baselines = baseline, target=tf_index,\n            additional_forward_args=(bias_raw, bias_smooth, True)).detach().cpu().numpy()\n\n    # make predictions on original and mutated strand\n    pred, _ = model.forward(one_hot, bias_raw, bias_smooth, interpretation=False)\n    pred = pred.detach().cpu().numpy().squeeze()\n    mut_pred,_ = model.forward(mut_one_hot, bias_raw, bias_smooth, interpretation=False)\n    mut_pred = mut_pred.detach().cpu().numpy().squeeze()\n\n    # scale predictions with tf_counts for plotting\n    #  print(pred.shape, tf_counts.shape)\n    pred = pred * tf_counts.sum(axis=-1, keepdims=True)\n    mut_pred = mut_pred * tf_counts.sum(axis=-1, keepdims=True)\n\n    tf_df = pd.DataFrame({\"pos\": np.arange(1000), \"TF\": tf, \"pos_values\": pred[tf_index, 0,:], \"neg_values\": pred[tf_index, 1,:], \"mut_pos_values\" : mut_pred[tf_index, 0, :], \"mut_neg_values\" : mut_pred[tf_index, 1,:], \"tf_counts_pos\": tf_counts[tf_index, 0, :], \"tf_counts_neg\": tf_counts[tf_index, 1, :]})\n    df_list.append(tf_df)\n\n    if plot:\n      plot_weights(contr,\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Original sequence\", \n      xlabel=f\"{tmp_df.seqnames[idx]}: {tmp_df.start[idx]}-{tmp_df.end[idx]}\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=20, figsize=figsize1)\n\n      # zoomed into motif region\n      plot_weights(contr[:, :,dist_start-extend_left : (dist_start + width + extend_right)],\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Original motif\", \n      xlabel=f\"{seqname}: {start}-{end}\",#, ({dist_start} - {dist_start + width})\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=10, figsize=figsize2)\n      plt.savefig(output_dir / f\"{tf}_{seqname}_{start}_{end}_original_{suffix}.pdf\")  \n\n      # entire mutated sequence\n      plot_weights(mut_contr,\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Mutated sequence\", \n      xlabel=f\"{tmp_df.seqnames[idx]}: {tmp_df.start[idx]}-{tmp_df.end[idx]}\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=20, figsize=figsize1)\n\n      # zoomed in mutated sequence\n      plot_weights(mut_contr[:, :,dist_start-extend_left : (dist_start + width + extend_right)],\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Mutated motif\", \n      xlabel=f\"{seqname}: {start}-{end}\",#, ({dist_start} - {dist_start + width})\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=10, figsize=figsize2)\n      plt.savefig(f\"{output_dir}{tf}_{seqname}_{start}_{end}_mutated_{suffix}.pdf\")  \n      \n      #fig = plt.figure(figsize=(10,4))\n      plt.plot(-tf_counts[tf_index, 1, :], color=\"green\", linewidth=0.8)\n      plt.plot()\n      fig, axis = plt.subplots(2,1,figsize=(10,8))\n      axis[0].plot(tf_counts[tf_index, 0, :], label=\"true counts\", color=\"green\", linewidth=0.8)\n      axis[0].plot(-tf_counts[tf_index, 1, :], color=\"green\", linewidth=0.8)\n      axis[0].plot(pred[tf_index, 0, :], label=\"pred\", color=\"blue\", linewidth=0.8)\n      axis[0].plot(-pred[tf_index, 1, :], color=\"blue\", linewidth=0.8)   \n      axis[0].set_xlabel(\"bp\")\n      axis[0].set_ylabel(\"Read counts\")\n      axis[1].plot(tf_counts[tf_index, 1, :], color=\"green\", linewidth=0.8)\n      axis[1].plot(-tf_counts[tf_index, 1, :], color=\"green\", linewidth=0.8)\n      axis[1].plot(mut_pred[tf_index, 0, :], label=\"pred mutated strand\", color=\"darkred\", linewidth=0.8)\n      axis[1].plot(-mut_pred[tf_index, 1, :], color=\"darkred\", linewidth=0.8)      \n      axis[1].set_xlabel(\"bp\")\n      axis[0].legend()\n      axis[1].legend()\n      plt.show()\n  plot_df = pd.concat(df_list)\n\n  return contr, mut_contr, dist_start, plot_df\n```\n:::\n\n\n# Remove entire motif\n\n::: {#d3952803 .cell execution_count=12}\n``` {.python .cell-code}\n_, _, dist_start, plot_df = remove_motif(seqname, start=a, end=b, dataset=train_dataset,  dl=dl, suffix=\"remove\", output_dir=FIG_DIR, tf_list=conf_dict[\"tf_list\"], device=device, figsize1=(30,2), figsize2=(10,1.5))\nplot_df.to_csv(OUTPUT_DIR / \"remove_motif.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-2.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-3.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-4.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-5.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-6.png){width=819 height=651}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-8.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-9.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-10.png){width=2342 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-11.png){width=839 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-12.png){width=811 height=651}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-14.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-15.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-16.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-17.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-18.png){width=819 height=652}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-20.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-21.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-22.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-23.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-13-output-24.png){width=819 height=651}\n:::\n:::\n\n\n```{r}\nlibrary(tidyverse)\noutput_dir = py$FIG_DIR\ncolors = c(\"Oct4\" = \"#CD5C5C\",\n           \"Sox2\" = \"#849EEB\",\n           \"Nanog\" = \"#FFE03F\",\n           \"Klf4\" = \"#92C592\",\n           \"patchcap\" = \"#827F81\")\ndf = read.csv(file.path(py$OUTPUR_DIR, \"remove_motif.csv\"))\ndf %>%\n  ggplot() +\n  geom_line(aes(x=pos, y=tf_counts_pos, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=-tf_counts_neg, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=pos_values, col=TF), size=.7) +\n  geom_line(aes(x=pos, y=-neg_values, col=TF), size=.7) +\n  facet_wrap(~TF, ncol=1, scales=\"free_y\") +\n  labs(x=\"Position\", y=\"Counts\", col=\"Strand\") +\n  scale_color_manual(values=colors) + \n  #scale_alpha_manual(values=c(\"pos\" = 1, \"neg\" = 1)) +\n  theme_bw()\nggsave(paste0(output_dir, \"chr4_55475545_55475604_remove_pred.pdf\"))\n\ndf %>%\n  ggplot() +\n  geom_line(aes(x=pos, y=tf_counts_pos, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=-tf_counts_neg, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=mut_pos_values, col=TF), size=.7) +\n  geom_line(aes(x=pos, y=-mut_neg_values, col=TF), size=.7) +\n  facet_wrap(~TF, ncol=1, scales=\"free_y\") +\n  labs(x=\"Position\", y=\"Counts\", col=\"Strand\") +\n  scale_color_manual(values=colors) + \n  #scale_alpha_manual(values=c(\"pos\" = 1, \"neg\" = 1)) +\n  theme_bw()\nggsave(paste0(output_dir, \"chr4_55475545_55475604_remove_mutpred.pdf\"))\n  #ggdark::dark_theme_linedraw()\n#ggsave(paste0(output_dir, \"chr4_55475545_55475604_zoomed_traces.pdf\"))\n```\n\n\n# Remove Oct4 part\n\n::: {#e06c3552 .cell execution_count=13}\n``` {.python .cell-code}\n_, _, dist_start, plot_df = remove_motif(seqname, start=a, end=a+8, dataset=train_dataset, suffix=\"remove_oct4\", output_dir=FIG_DIR,  dl=dl, tf_list=conf_dict[\"tf_list\"], device=device, extend_left=23, extend_right=23+6, figsize1=(30,2), figsize2=(10, 1.5))\nplot_df.to_csv(OUTPUT_DIR / \"remove_oct4.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-2.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-3.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-4.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-5.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-6.png){width=819 height=651}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-8.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-9.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-10.png){width=2342 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-11.png){width=839 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-12.png){width=811 height=651}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-14.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-15.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-16.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-17.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-18.png){width=819 height=652}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-20.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-21.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-22.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-23.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-14-output-24.png){width=819 height=651}\n:::\n:::\n\n\n```{r}\nlibrary(tidyverse)\noutput_dir = py$FIG_DIR\ncolors = c(\"Oct4\" = \"#CD5C5C\",\n           \"Sox2\" = \"#849EEB\",\n           \"Nanog\" = \"#FFE03F\",\n           \"Klf4\" = \"#92C592\",\n           \"patchcap\" = \"#827F81\")\ndf = read.csv(file.path(py$OUTPUR_DIR, \"remove_oct4.csv\"))\ndf %>%\n  ggplot() +\n  geom_line(aes(x=pos, y=tf_counts_pos, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=-tf_counts_neg, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=pos_values, col=TF), size=.7) +\n  geom_line(aes(x=pos, y=-neg_values, col=TF), size=.7) +\n  facet_wrap(~TF, ncol=1, scales=\"free_y\") +\n  labs(x=\"Position\", y=\"Counts\", col=\"Strand\") +\n  scale_color_manual(values=colors) + \n  #scale_alpha_manual(values=c(\"pos\" = 1, \"neg\" = 1)) +\n  theme_bw()\nggsave(paste0(output_dir, \"chr4_55475545_55475604_remove_oct4_pred.pdf\"))\n\ndf %>%\n  ggplot() +\n  geom_line(aes(x=pos, y=tf_counts_pos, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=-tf_counts_neg, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=mut_pos_values, col=TF), size=.7) +\n  geom_line(aes(x=pos, y=-mut_neg_values, col=TF), size=.7) +\n  facet_wrap(~TF, ncol=1, scales=\"free_y\") +\n  labs(x=\"Position\", y=\"Counts\", col=\"Strand\") +\n  scale_color_manual(values=colors) + \n  #scale_alpha_manual(values=c(\"pos\" = 1, \"neg\" = 1)) +\n  theme_bw()\nggsave(paste0(output_dir, \"chr4_55475545_55475604_remove_oct4_mutpred.pdf\"))\n  #ggdark::dark_theme_linedraw()\n#ggsave(paste0(output_dir, \"chr4_55475545_55475604_zoomed_traces.pdf\"))\n```\n\n\n# Remove Sox2 part\n\n::: {#cf2cda7f .cell execution_count=14}\n``` {.python .cell-code}\n_, _, dist_start, plot_df = remove_motif(seqname, start=a+8, end=b, dataset=train_dataset,  suffix=\"remove_sox2\", output_dir=FIG_DIR, dl=dl, tf_list=conf_dict[\"tf_list\"], device=device, figsize1=(30,2), figsize2=(10,1.5))\nplot_df.to_csv(OUTPUT_DIR / \"remove_sox2.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-2.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-3.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-4.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-5.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-6.png){width=819 height=651}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-8.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-9.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-10.png){width=2342 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-11.png){width=839 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-12.png){width=811 height=651}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-14.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-15.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-16.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-17.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-18.png){width=819 height=652}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-20.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-21.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-22.png){width=2333 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-23.png){width=830 height=206}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-15-output-24.png){width=819 height=651}\n:::\n:::\n\n\n```{r}\nlibrary(tidyverse)\noutput_dir = py$FIG_DIR\ncolors = c(\"Oct4\" = \"#CD5C5C\",\n           \"Sox2\" = \"#849EEB\",\n           \"Nanog\" = \"#FFE03F\",\n           \"Klf4\" = \"#92C592\",\n           \"patchcap\" = \"#827F81\")\ndf = read.csv(file.path(py$OUTPUR_DIR, \"remove_sox2.csv\"))\ndf %>%\n  ggplot() +\n  geom_line(aes(x=pos, y=tf_counts_pos, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=-tf_counts_neg, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=pos_values, col=TF), size=.7) +\n  geom_line(aes(x=pos, y=-neg_values, col=TF), size=.7) +\n  facet_wrap(~TF, ncol=1, scales=\"free_y\") +\n  labs(x=\"Position\", y=\"Counts\", col=\"Strand\") +\n  scale_color_manual(values=colors) + \n  #scale_alpha_manual(values=c(\"pos\" = 1, \"neg\" = 1)) +\n  theme_bw()\nggsave(paste0(output_dir, \"chr4_55475545_55475604_remove_sox2_pred.pdf\"))\n\ndf %>%\n  ggplot() +\n  geom_line(aes(x=pos, y=tf_counts_pos, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=-tf_counts_neg, col=\"black\"))+#, alpha=0.8)) +\n  geom_line(aes(x=pos, y=mut_pos_values, col=TF), size=.7) +\n  geom_line(aes(x=pos, y=-mut_neg_values, col=TF), size=.7) +\n  facet_wrap(~TF, ncol=1, scales=\"free_y\") +\n  labs(x=\"Position\", y=\"Counts\", col=\"Strand\") +\n  scale_color_manual(values=colors) + \n  #scale_alpha_manual(values=c(\"pos\" = 1, \"neg\" = 1)) +\n  theme_bw()\nggsave(paste0(output_dir, \"chr4_55475545_55475604_remove_sox2_mutpred.pdf\"))\n  #ggdark::dark_theme_linedraw()\n#ggsave(paste0(output_dir, \"chr4_55475545_55475604_zoomed_traces.pdf\"))\n```\n\n\n# Move Sox2 part somewhere else\n\n::: {#f516307a .cell execution_count=15}\n``` {.python .cell-code}\n# here I move the second motif(Sox2) d bps to the right\ndef move_motifs_apart(seqname, start, end, dataset, DeepLiftModel, distance, plot=True, figsize1=(20,2), figsize2=(10,2)):\n  # select sequence of interest\n  tmp_df, idx, dist_start, one_hot, baseline, bias_raw, bias_smooth, tf_counts = get_seq_oi(seqname, start, end, dataset, device)\n  width = end - start\n\n  #shuffle region of interest\n  mut_one_hot = one_hot.clone().cpu().numpy()\n  roi = mutate_sequence(mut_one_hot[:, :, dist_start:dist_start+width])\n  mut_one_hot[:, :, dist_start:dist_start+end-start] = roi\n  # add motif at new location 10kb to the right\n  mut_one_hot[:, :, dist_start+distance:dist_start+width+distance] = one_hot[:, :, dist_start:dist_start+width].detach().cpu().numpy()\n  print(f\"New location of motif at: {distance} - {distance+width}\")\n  mut_one_hot = torch.tensor(mut_one_hot).to(device)\n  assert torch.all(one_hot == mut_one_hot) == False\n\n\n  contr_list = []\n  for tf_index, tf in enumerate(conf_dict[\"tf_list\"]):\n    # compute contribution scores on original and mutated strand\n    contr = dl.attribute(inputs=one_hot, baselines=baseline, target=tf_index, additional_forward_args=(bias_raw, bias_smooth, True)).detach().cpu().numpy()\n    mut_contr = dl.attribute(inputs=mut_one_hot, baselines = baseline, target=tf_index, additional_forward_args=(bias_raw, bias_smooth, True)).detach().cpu().numpy()\n\n    # make predictions on original and mutated strand\n    pred, _ = model.forward(one_hot, bias_raw, bias_smooth, interpretation=False)\n    pred = pred.detach().cpu().numpy().squeeze()\n    mut_pred,_ = model.forward(mut_one_hot, bias_raw, bias_smooth, interpretation=False)\n    mut_pred = mut_pred.detach().cpu().numpy().squeeze()\n\n    # scale predictions with tf_counts for plotting\n    pred = pred * tf_counts.sum(axis=-1, keepdims=True)\n    mut_pred = mut_pred * tf_counts.sum(axis=-1, keepdims=True)\n    if plot:\n      plot_weights(contr,\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Original sequence\", \n      xlabel=f\"{tmp_df.seqnames[idx]}: {tmp_df.start[idx]}-{tmp_df.end[idx]}\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=20, figsize=figsize1)\n\n      # zoomed into motif region\n      plot_weights(contr[:, :,dist_start : (dist_start + width)],\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Original motif\", \n      xlabel=f\"{seqname}: {start}-{end}, ({dist_start} - {dist_start + width})\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=1, figsize=figsize2)\n\n      # entire mutated sequence\n      plot_weights(mut_contr,\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Motif moved to {distance} - {distance+width}\", \n      xlabel=f\"{tmp_df.seqnames[idx]}: {tmp_df.start[idx]}-{tmp_df.end[idx]}\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=20, figsize=figsize1)\n\n      # zoomed in mutated sequence\n      plot_weights(mut_contr[:, :,dist_start : (dist_start + width)],\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Mutated motif\", \n      xlabel=f\"{seqname}: {start}-{end}, ({dist_start} - {dist_start + width})\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=1, figsize=figsize2)\n\n      # zoomed in new location of motif\n      # zoomed in mutated sequence\n      plot_weights(mut_contr[:, :,dist_start+distance:dist_start+width+distance],\n      fontsizes=[20,15,15],\n      title = f\"{tf} - Motif at new position\", \n      xlabel=f\"{seqname}: {start+distance}-{end+distance}, ({dist_start+distance} - {dist_start+distance + width})\", \n      ylabel=\"DeepLift contribution scores\",\n      subticks_frequency=1, figsize=figsize2)\n\n\n      #viz_sequence.plot_weights(contr.detach().cpu().numpy(), subticks_frequency=10, figsize=(25, 2))\n      #print(f\"coordinates: {seqname}:{start}-{end}, ({dist_start} - {dist_start + end - start})\")\n      #viz_sequence.plot_weights(contr.detach().cpu().numpy()[:, :,dist_start : (dist_start + end - start)], subticks_frequency=5, figsize=(10,2)) \n      #print(f\"motif moved:\")\n      #viz_sequence.plot_weights(mut_contr.detach().cpu().numpy(), subticks_frequency=10, figsize=(25, 2))\n      #print(f\"coordinates: {seqname}:{start}-{end}, ({dist_start} - {dist_start + end - start})\")\n      #viz_sequence.plot_weights(mut_contr.detach().cpu().numpy()[:, :,dist_start : (dist_start + end - start)], subticks_frequency=5, figsize=(10,2)) \n\n      fig, axis = plt.subplots(2,2,figsize=(12,12))\n      axis[0, 0].plot(tf_counts[tf_index, 0, :], label=\"true counts\", color=\"green\", linewidth=0.8)\n      axis[0, 0].plot(-tf_counts[tf_index, 1, :], color=\"green\", linewidth=0.8)\n      axis[0, 0].plot(pred[tf_index, 0, :], label=\"pred\", color=\"blue\", linewidth=0.8)\n      axis[0, 0].plot(-pred[tf_index, 1, :], color=\"blue\", linewidth=0.8)   \n      axis[0, 0].set_xlabel(\"bp\")\n      axis[0, 0].set_ylabel(\"Read counts\")\n      axis[0, 1].plot(pred[tf_index, 0, :], label=\"pred\", color=\"blue\", linewidth=0.8)\n      axis[0, 1].plot(-pred[tf_index, 1, :], color=\"blue\", linewidth=0.8)\n      axis[0, 1].set_xlabel(\"bp\")\n      axis[0, 1].set_ylabel(\"Predicted probabilitiy * total counts\")\n      axis[1, 0].plot(tf_counts[tf_index, 0, :], label=\"true counts\", color=\"green\", linewidth=0.8)\n      axis[1, 0].plot(-tf_counts[tf_index, 1, :], color=\"green\", linewidth=0.8)\n      axis[1, 0].plot(mut_pred[tf_index, 0, :], label=\"pred mutated strand\", color=\"darkred\", linewidth=0.8)\n      axis[1, 0].plot(-mut_pred[tf_index, 1, :], color=\"darkred\", linewidth=0.8)      \n      axis[1, 0].set_xlabel(\"bp\")\n      axis[1, 0].set_ylabel(\"Read counts\")\n      axis[1, 1].plot(mut_pred[tf_index, 0, :], label=\"pred mutated strand\", color=\"darkred\", linewidth=0.8)\n      axis[1, 1].plot(-mut_pred[tf_index, 1, :], color=\"darkred\", linewidth=0.8)\n      axis[1, 1].set_xlabel(\"bp\")\n      axis[1, 1].set_ylabel(\"Predicted probabilitiy * total counts\")\n      axis[0, 0].legend()\n      axis[1, 0].legend()\n      axis[0, 1].legend()\n      axis[1,1].legend()\n      plt.show()\n\n\n  return contr, mut_contr, dist_start\n```\n:::\n\n\n::: {#b5036a10 .cell execution_count=16}\n``` {.python .cell-code}\nx, y, dist_start = move_motifs_apart(seqname, a+8, b, train_dataset, dl, 10, plot=True)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNew location of motif at: 10 - 16\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/_utils/gradient.py:57: UserWarning: Input Tensor 0 did not already require gradients, required_grads has been set automatically.\n  warnings.warn(\n/Users/pschafer/miniforge3/envs/py-env-bpnet/lib/python3.12/site-packages/captum/attr/_core/deep_lift.py:304: UserWarning: Setting forward, backward hooks and attributes on non-linear\n               activations. The hooks and attributes will be removed\n            after the attribution is finished\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-3.png){width=1590 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-4.png){width=830 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-5.png){width=1590 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-6.png){width=839 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-7.png){width=847 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-8.png){width=968 height=947}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-9.png){width=1590 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-10.png){width=828 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-11.png){width=1598 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-12.png){width=828 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-13.png){width=828 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-14.png){width=959 height=947}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-15.png){width=1590 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-16.png){width=819 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-17.png){width=1590 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-18.png){width=839 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-19.png){width=839 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-20.png){width=968 height=949}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-21.png){width=1590 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-22.png){width=819 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-23.png){width=1590 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-24.png){width=828 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-25.png){width=839 height=243}\n:::\n\n::: {.cell-output .cell-output-display}\n![](07_mutagenesis_files/figure-html/cell-17-output-26.png){width=968 height=947}\n:::\n:::\n\n\n",
    "supporting": [
      "07_mutagenesis_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}