{
  "hash": "970d484e9e4fd98ed6c20642f94efc09",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Data Download\"\njupyter: py-env-bpnet\nexecute:\n  freeze: auto\n---\n\n\n- We can downlaod the data from [https://zenodo.org/records/3371216](https://zenodo.org/records/3371216)\n\n::: {#5432f5e6 .cell execution_count=1}\n``` {.python .cell-code}\nimport requests\nfrom pathlib import Path\nimport tarfile\n\ndata_tar = Path(\"..\") / \"data.tar.gz\"\ndata_directory = Path(\"..\") / \"data\"\n\nif data_directory.exists():\n    print(f\"Data directory already exists at {data_directory}.\")\nelif data_tar.exists():\n    print(f\"Tar.gz file found at {data_tar}. Extracting...\")\n    with tarfile.open(data_tar, \"r:gz\") as tar_ref:\n        tar_ref.extractall(data_directory)\n    print(\"Extraction complete.\")\n    # Delete the tar file\n    data_tar.unlink()\n    print(f\"Deleted tar.gz file at {data_tar}.\")\nelse:\n    data_url = \"https://zenodo.org/records/3371216/files/data.tar.gz?download=1\"\n    response = requests.get(data_url, stream=True)\n    response.raise_for_status()  # Raise an error for bad HT\n    with open(data_tar, \"wb\") as file:\n        for chunk in response.iter_content(chunk_size=8192):\n            file.write(chunk)\n    print(f\"Downloaded and saved tar.gz file at {data_tar}.\")\n    print(\"Extracting the tar.gz file...\")\n    with tarfile.open(data_tar, \"r:gz\") as tar_ref:\n        tar_ref.extractall(data_directory)\n    print(\"Extraction complete.\")\n    data_tar.unlink()\n    print(f\"Deleted tar.gz file at {data_tar}.\")\nlist(data_directory.iterdir())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nData directory already exists at ../data.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n[PosixPath('../data/mm10.fa.gz'), PosixPath('../data/data')]\n```\n:::\n:::\n\n\n- Since the data directory is quite large we will delete the files we don't need.\n\n- Furthermore we download the `mm10.fa` file\n\n::: {#a5b7103e .cell execution_count=2}\n``` {.python .cell-code}\nmm10_file = data_directory / \"mm10.fa.gz\"\nmm10_url = \"https://hgdownload.soe.ucsc.edu/goldenPath/mm10/bigZips/mm10.fa.gz\"\n# Check if the file already exists\nif mm10_file.exists():\n    print(f\"File already exists at {mm10_file}. Skipping download.\")\nelse:\n    # Download the file\n    print(f\"Downloading {mm10_url}...\")\n    response = requests.get(mm10_url, stream=True)\n    response.raise_for_status()  # Raise an error for bad HTTP responses\n\n    # Save the file\n    with open(mm10_file, \"wb\") as file:\n        for chunk in response.iter_content(chunk_size=8192):\n            file.write(chunk)\n    print(f\"Downloaded and saved file at {mm10_file}.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFile already exists at ../data/mm10.fa.gz. Skipping download.\n```\n:::\n:::\n\n\n",
    "supporting": [
      "01_download_files"
    ],
    "filters": [],
    "includes": {}
  }
}